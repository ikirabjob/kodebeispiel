<?php

namespace App\Tests\Application\Person\Command;

use App\Application\Person\Command\DeletePersonCommand;
use App\Application\Shared\Command\CommandBusInterface;
use App\DataFixtures\PersonFixture;
use App\Domain\Person\Model\Person;
use Doctrine\ORM\EntityManagerInterface;
use Exception;
use Liip\TestFixturesBundle\Services\DatabaseToolCollection;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class DeletePersonCommandTest extends KernelTestCase
{
    /**
     * @var object|null
     */
    private ?object $commandBus;

    /**
     * @var object|null
     */
    private ?object $entityManager;

    /**
     * @var object|null
     */
    private ?object $fixtures;

    /**
     * @throws Exception
     */
    protected function setUp(): void
    {
        parent::setUp();
        $this->commandBus = static::getContainer()->get(CommandBusInterface::class);
        $this->entityManager = static::getContainer()->get(EntityManagerInterface::class);
        $databaseTool = static::getContainer()->get(DatabaseToolCollection::class)->get();

        $this->fixtures = $databaseTool->loadFixtures([
            PersonFixture::class
        ])->getReferenceRepository();
    }

    public function test_delete_person_command() : void
    {
        $command = new DeletePersonCommand($this->fixtures->getReference('person')->getPersonId());
        $this->commandBus->dispatch($command);

        /** @var Person|null $person */
        $person = $this->entityManager->getRepository(Person::class)->findOneBy([
            'personId' => $this->fixtures->getReference('person')->getPersonId()
        ]);

        self::assertNull($person);
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->entityManager->close();
        $this->fixtures = null;
        $this->commandBus = null;
    }
}