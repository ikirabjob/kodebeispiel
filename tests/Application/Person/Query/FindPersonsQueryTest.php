<?php

namespace App\Tests\Application\Person\Query;

use App\Application\Person\Query\FindPersonQuery;
use App\Application\Person\Query\FindPersonsQuery;
use App\Application\Shared\Query\QueryBusInterface;
use App\DataFixtures\PersonFixture;
use App\Domain\Person\Model\Person;
use App\Domain\Shared\Criteria\Criteria;
use Exception;
use Liip\TestFixturesBundle\Services\DatabaseToolCollection;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class FindPersonsQueryTest extends KernelTestCase
{
    /**
     * @var object|null
     */
    private ?object $queryBus;

    /**
     * @var object|null
     */
    private ?object $fixtures;

    /**
     * @throws Exception
     */
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->queryBus = static::getContainer()->get(QueryBusInterface::class);
        $databaseTool = static::getContainer()->get(DatabaseToolCollection::class)->get();

        $this->fixtures = $databaseTool->loadFixtures([
            PersonFixture::class
        ])->getReferenceRepository();
    }

    public function test_find_person_query() : void
    {
        $personSet[] = $this->fixtures->getReference('person');
        $personsQuery = new FindPersonsQuery(new Criteria([]));
        /** @var Person $person */
        $persons = $this->queryBus->ask($personsQuery);

        $result = [];
        foreach ($persons as $key => $person) {
            $result[$key] = $person;
        }

        self::assertIsArray($result);
        self::assertEquals($personSet, $result);
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->queryBus = null;
        $this->fixtures = null;
    }
}